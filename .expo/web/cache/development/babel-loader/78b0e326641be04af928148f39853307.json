{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Downloads\\\\MasterrCode\\\\IngenieriaSoftware1\\\\screens\\\\tipoLavado.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TodoItem from \"../components/iconos\";\nexport default function tipoLavado(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState([{\n    name: 'LAVADA COMPLETA',\n    id: '1'\n  }, {\n    name: 'LIMPIEZA DE MOTOR',\n    id: '2'\n  }, {\n    name: 'LIMPIEZA INTEGRAL',\n    id: '3'\n  }, {\n    name: 'ENCERADA',\n    id: '4'\n  }]),\n      _useState2 = _slicedToArray(_useState, 2),\n      servicios = _useState2[0],\n      setServicios = _useState2[1];\n\n  var pressHandler = function pressHandler(id) {\n    console.log(id);\n  };\n\n  var onChangue = function onChangue() {\n    navigation.navigate(\"Schedule\");\n  };\n\n  var AppButton = function AppButton(_ref2) {\n    var onPress = _ref2.onPress,\n        title = _ref2.title;\n    return React.createElement(TouchableOpacity, {\n      onPress: onPress,\n      style: styles.appButtonContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 5\n      }\n    }, React.createElement(Text, {\n      style: styles.appButtonText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }\n    }, title));\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    data: servicios,\n    renderItem: function renderItem(_ref3) {\n      var item = _ref3.item;\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return pressHandler(item.id);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }\n      }, React.createElement(TodoItem, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 39\n        }\n      }), item.name));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.buttonContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    title: \"CONTINUAR\",\n    onPress: onChangue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    textAlign: 'center',\n    justifyContent: 'center',\n    position: 'relative',\n    backgroundColor: '#66C3FE'\n  },\n  buttonContainer: {\n    marginTop: 20,\n    padding: 30\n  },\n  item: {\n    flex: 1,\n    marginHorizontal: 10,\n    marginTop: 24,\n    padding: 30,\n    backgroundColor: 'red',\n    borderRadius: 30,\n    textAlign: 'center',\n    color: '#fff',\n    fontSize: 24\n  },\n  bigCircle: {\n    width: Dimensions.get('window').height * 0.7,\n    height: Dimensions.get('window').height * 0.7,\n    backgroundColor: '#49A5FC',\n    borderRadius: 1000,\n    position: 'absolute',\n    right: Dimensions.get('window').width * 0.25,\n    top: -50\n  },\n  smallCircle: {\n    width: Dimensions.get('window').height * 0.4,\n    height: Dimensions.get('window').height * 0.4,\n    backgroundColor: '#55B1FC',\n    borderRadius: 1000,\n    position: 'absolute',\n    right: Dimensions.get('window').width * -0.2,\n    bottom: Dimensions.get('window').width * -0.3\n  }\n});","map":{"version":3,"sources":["C:/Users/ADMIN/Downloads/MasterrCode/IngenieriaSoftware1/screens/tipoLavado.js"],"names":["StatusBar","React","useState","TodoItem","tipoLavado","navigation","name","id","servicios","setServicios","pressHandler","console","log","onChangue","navigate","AppButton","onPress","title","styles","appButtonContainer","appButtonText","container","item","buttonContainer","StyleSheet","create","flex","alignItems","textAlign","justifyContent","position","backgroundColor","marginTop","padding","marginHorizontal","borderRadius","color","fontSize","bigCircle","width","Dimensions","get","height","right","top","smallCircle","bottom"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React, {useState} from 'react';\r\nimport { StyleSheet, Text, View, Button, Image, FlatList, TouchableOpacity, Dimensions, TouchableWithoutFeedback, Keyboard } from 'react-native';\r\nimport TodoItem from '../components/iconos';\r\n\r\nexport default function tipoLavado({navigation}) {\r\n  const [servicios, setServicios] = useState([\r\n    { name: 'LAVADA COMPLETA', id: '1' },\r\n    { name: 'LIMPIEZA DE MOTOR', id: '2' },\r\n    { name: 'LIMPIEZA INTEGRAL', id: '3' },\r\n    { name: 'ENCERADA', id: '4' },\r\n  ]);\r\n  const pressHandler = (id) => {\r\n    console.log(id);\r\n  }\r\n  const onChangue=()=>{\r\n    navigation.navigate(\"Schedule\");\r\n  }\r\n\r\n  const AppButton = ({ onPress, title }) => (\r\n    <TouchableOpacity onPress={onPress} style={styles.appButtonContainer}>\r\n      <Text style={styles.appButtonText}>{title}</Text>\r\n    </TouchableOpacity>\r\n  );\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n\r\n      {/* <Image\r\n        style={{ width: 100, height: 100 }}\r\n        resizeMode=\"contain\"\r\n        source={require('../assets/servicio 1.png')}        \r\n      />\r\n       */}\r\n   \r\n\r\n      <FlatList \r\n        keyExtractor={(item) => item.id} \r\n        data={servicios}\r\n        renderItem={({ item }) => (\r\n          <TouchableOpacity onPress={() => pressHandler(item.id)}>\r\n            <Text style={styles.item}><TodoItem/>{item.name}</Text>\r\n          </TouchableOpacity>\r\n        )}\r\n      />\r\n        <View style={styles.buttonContainer}>\r\n          <Button title='CONTINUAR'\r\n          onPress={onChangue}/>\r\n        </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    textAlign: 'center',\r\n    justifyContent: 'center',\r\n\t\tposition: 'relative',\r\n\t\tbackgroundColor: '#66C3FE',\r\n  },\r\n  buttonContainer: {\r\n    marginTop: 20,\r\n    padding: 30,\r\n  },\r\n  item: {\r\n    flex: 1,\r\n    marginHorizontal: 10,\r\n    marginTop: 24,\r\n    padding: 30,\r\n    backgroundColor: 'red',\r\n    borderRadius: 30,\r\n    textAlign: 'center',\r\n    color: '#fff',\r\n    fontSize: 24,\r\n  },\r\n  bigCircle: {\r\n\t\twidth: Dimensions.get('window').height * 0.7,\r\n\t\theight: Dimensions.get('window').height * 0.7,\r\n\t\tbackgroundColor: '#49A5FC',\r\n\t\tborderRadius: 1000,\r\n\t\tposition: 'absolute',\r\n\t\tright: Dimensions.get('window').width * 0.25,\r\n\t\ttop: -50,\r\n\t},\r\n\tsmallCircle: {\r\n\t\twidth: Dimensions.get('window').height * 0.4,\r\n\t\theight: Dimensions.get('window').height * 0.4,\r\n\t\tbackgroundColor: '#55B1FC',\r\n\t\tborderRadius: 1000,\r\n\t\tposition: 'absolute',\r\n\t\tright: Dimensions.get('window').width * -0.2,\r\n\t\tbottom: Dimensions.get('window').width * -0.3,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}