{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject,\n    _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Harold\\\\Downloads\\\\ProyectoIngS\\\\IngenieriaSoftware1\\\\screens\\\\Register.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { Icon } from 'react-native-elements';\nimport { Toast } from 'native-base';\nimport { useNavigation } from '@react-navigation/core';\nimport { gql, useMutation } from '@apollo/client';\nvar NUEVA_CUENTA = gql(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\nmutation crearUsuario($input: UsuarioInput) {\\n  crearUsuario(input : $input)\\n}\\n\\n\"])));\n\nvar Register = function Register() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      usuario = _useState2[0],\n      guardarUsuario = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      nombre = _useState4[0],\n      guardarNombre = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      email = _useState6[0],\n      guardarEmail = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      telefono = _useState8[0],\n      guardarTelefono = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      contrasena = _useState10[0],\n      guardarContrasena = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      mensaje = _useState12[0],\n      guardarMensaje = _useState12[1];\n\n  var navigation = useNavigation();\n\n  var _useMutation = useMutation(NUEVA_CUENTA),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      crearUsuario = _useMutation2[0];\n\n  var handleSubmit = function handleSubmit() {\n    var _await$crearUsuario, data;\n\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(usuario === \"\" || nombre === \"\" || email === \"\" || contrasena === \"\" || telefono === \"\")) {\n              _context.next = 3;\n              break;\n            }\n\n            guardarMensaje('Todos los campos son obligatorios');\n            return _context.abrupt(\"return\");\n\n          case 3:\n            if (!(contrasena.length < 6)) {\n              _context.next = 6;\n              break;\n            }\n\n            guardarMensaje('La contraseÃ±a debe tener al menos 6 caracteres');\n            return _context.abrupt(\"return\");\n\n          case 6:\n            _context.prev = 6;\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(crearUsuario({\n              variables: {\n                input: {\n                  usuario: usuario,\n                  nombre: nombre,\n                  email: email,\n                  telefono: telefono,\n                  contrasena: contrasena\n                }\n              }\n            }));\n\n          case 9:\n            _await$crearUsuario = _context.sent;\n            data = _await$crearUsuario.data;\n            guardarMensaje(data.crearUsuario);\n            navigation.navigate('Login');\n            _context.next = 18;\n            break;\n\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](6);\n            guardarMensaje(_context.t0.message.replace('GraphQL error: ', ''));\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[6, 15]], Promise);\n  };\n\n  var mostrarAlerta = function mostrarAlerta() {\n    Toast.show({\n      text: mensaje,\n      registerButtonText: 'OK',\n      duration: 4000\n    });\n  };\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return Keyboard.dismiss();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 3\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 6\n    }\n  }, React.createElement(View, {\n    style: styles.bigCircle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.smallCircle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.centerizedView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.authBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 8\n    }\n  }, React.createElement(View, {\n    style: styles.logoBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, React.createElement(Icon, {\n    color: \"#fff\",\n    name: \"comments\",\n    type: \"font-awesome\",\n    size: 50,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 10\n    }\n  })), React.createElement(Text, {\n    style: styles.loginTitleText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, \"Ingrese sus datos\"), React.createElement(View, {\n    style: styles.hr,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.inputBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Nombre de usuario\",\n    onChangeText: function onChangeText(texto) {\n      return guardarUsuario(texto);\n    },\n    style: styles.input,\n    autoCapitalize: \"none\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 10\n    }\n  })), React.createElement(View, {\n    style: styles.inputBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Nombres completos\",\n    onChangeText: function onChangeText(texto) {\n      return guardarNombre(texto);\n    },\n    style: styles.input,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 10\n    }\n  })), React.createElement(View, {\n    style: styles.inputBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Email\",\n    onChangeText: function onChangeText(texto) {\n      return guardarEmail(texto);\n    },\n    style: styles.input,\n    autoCapitalize: \"none\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 10\n    }\n  })), React.createElement(View, {\n    style: styles.inputBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Tel\\xE9fono\",\n    onChangeText: function onChangeText(texto) {\n      return guardarTelefono(texto);\n    },\n    style: styles.input,\n    keyboardType: \"numeric\",\n    maxLength: 10,\n    autoCapitalize: \"none\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 10\n    }\n  })), React.createElement(View, {\n    style: styles.inputBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Contrase\\xF1a\",\n    onChangeText: function onChangeText(texto) {\n      return guardarContrasena(texto);\n    },\n    style: styles.input,\n    autoCapitalize: \"none\",\n    secureTextEntry: true,\n    textContentType: \"password\",\n    minLength: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 10\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: styles.registerButton,\n    onPress: function onPress() {\n      return handleSubmit();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.registerButtonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 10\n    }\n  }, \"Registrar\")))), mensaje && mostrarAlerta()));\n};\n\nexport default Register;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    position: 'relative',\n    backgroundColor: '#66C3FE'\n  },\n  bigCircle: {\n    width: Dimensions.get('window').height * 0.7,\n    height: Dimensions.get('window').height * 0.7,\n    backgroundColor: '#49A5FC',\n    borderRadius: 1000,\n    position: 'absolute',\n    right: Dimensions.get('window').width * 0.25,\n    top: -50\n  },\n  smallCircle: {\n    width: Dimensions.get('window').height * 0.4,\n    height: Dimensions.get('window').height * 0.4,\n    backgroundColor: '#55B1FC',\n    borderRadius: 1000,\n    position: 'absolute',\n    right: Dimensions.get('window').width * -0.2,\n    bottom: Dimensions.get('window').width * -0.3\n  },\n  centerizedView: {\n    width: '100%',\n    top: '15%'\n  },\n  authBox: {\n    width: '80%',\n    backgroundColor: '#fafafa',\n    borderRadius: 20,\n    alignSelf: 'center',\n    paddingHorizontal: 14,\n    paddingBottom: 30,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  logoBox: {\n    width: 80,\n    height: 80,\n    backgroundColor: '#eb4d4b',\n    borderRadius: 1000,\n    alignSelf: 'center',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    top: -50,\n    marginBottom: -50,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 1.41,\n    elevation: 2\n  },\n  loginTitleText: {\n    fontSize: 26,\n    fontWeight: 'bold',\n    marginTop: 10\n  },\n  hr: {\n    width: '100%',\n    height: 0.5,\n    backgroundColor: '#444',\n    marginTop: 6\n  },\n  inputBox: {\n    marginTop: 10\n  },\n  inputLabel: {\n    fontSize: 18,\n    marginBottom: 6\n  },\n  input: {\n    width: '100%',\n    height: 40,\n    backgroundColor: '#dfe4ea',\n    borderRadius: 4,\n    paddingHorizontal: 10\n  },\n  registerButton: {\n    backgroundColor: '#003366',\n    marginTop: 10,\n    paddingVertical: 10,\n    borderRadius: 4\n  },\n  registerButtonText: {\n    color: '#fff',\n    textAlign: 'center',\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  registerText: {\n    textAlign: 'center',\n    marginTop: 20,\n    fontSize: 16\n  },\n  forgotPasswordText: {\n    textAlign: 'center',\n    marginTop: 12,\n    fontSize: 16\n  },\n  scrollContainer: {\n    flex: 1,\n    paddingTop: 40,\n    paddingBottom: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/Harold/Downloads/ProyectoIngS/IngenieriaSoftware1/screens/Register.js"],"names":["React","useState","Icon","Toast","useNavigation","gql","useMutation","NUEVA_CUENTA","Register","usuario","guardarUsuario","nombre","guardarNombre","email","guardarEmail","telefono","guardarTelefono","contrasena","guardarContrasena","mensaje","guardarMensaje","navigation","crearUsuario","handleSubmit","length","variables","input","data","navigate","message","replace","mostrarAlerta","show","text","registerButtonText","duration","Keyboard","dismiss","styles","container","bigCircle","smallCircle","centerizedView","authBox","logoBox","loginTitleText","hr","inputBox","texto","registerButton","StyleSheet","create","flex","position","backgroundColor","width","Dimensions","get","height","borderRadius","right","top","bottom","alignSelf","paddingHorizontal","paddingBottom","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","display","alignItems","justifyContent","marginBottom","fontSize","fontWeight","marginTop","inputLabel","paddingVertical","color","textAlign","registerText","forgotPasswordText","scrollContainer","paddingTop"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n\tStyleSheet,\r\n\tText,\r\n\tView,\r\n\tTextInput,\r\n\tDimensions,\r\n\tTouchableOpacity,\r\n\tTouchableWithoutFeedback,\r\n\tKeyboard\r\n} from 'react-native';\r\nimport { Icon } from 'react-native-elements';\r\nimport { Toast } from 'native-base';\r\nimport { useNavigation } from '@react-navigation/core';\r\n\r\n//Apollo \r\nimport { gql, useMutation } from '@apollo/client';\r\n\r\nconst NUEVA_CUENTA = gql`\r\nmutation crearUsuario($input: UsuarioInput) {\r\n  crearUsuario(input : $input)\r\n}\r\n\r\n`;\r\n\r\n\r\n const Register = () =>{\r\n\r\n\tconst [usuario, guardarUsuario] = useState('');\r\n\tconst [nombre, guardarNombre] = useState('');\r\n\tconst [email, guardarEmail] = useState('');\r\n\tconst [telefono, guardarTelefono] = useState('');\r\n\tconst [contrasena, guardarContrasena] = useState('');\r\n\r\n\tconst [mensaje, guardarMensaje] = useState(null);\r\n\r\n\t//React navigation\r\n\tconst navigation = useNavigation();\r\n\r\n // Mutation de apollo\r\n const [ crearUsuario ] = useMutation(NUEVA_CUENTA);\r\n\r\n\r\n\t//cuando se presiona registrar\r\n\tconst handleSubmit = async () => {\r\n\t\t//validar\r\n\t\tif( usuario === \"\" || nombre === \"\" || email === \"\" || contrasena === \"\" || telefono === \"\" ){\r\n\t\t\t//Mostrar error\r\n\t\t\tguardarMensaje('Todos los campos son obligatorios')\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t//contraseÃ±a al menos 6 caracteres\r\n\t\tif(contrasena.length < 6){\r\n\t\t\tguardarMensaje('La contraseÃ±a debe tener al menos 6 caracteres');\r\n\t\t\treturn;\r\n\t\t} \r\n\t\t\r\n\t\t// guardar el usuario\r\n\r\n\t\ttry {\r\n\t\t\tconst { data } = await crearUsuario({\r\n\t\t\t\t\tvariables: {\r\n\t\t\t\t\t\t\tinput: {\r\n\t\t\t\t\t\t\t\t\tusuario,\r\n\t\t\t\t\t\t\t\t\tnombre, \r\n\t\t\t\t\t\t\t\t\temail,\r\n\t\t\t\t\t\t\t\t\ttelefono,\r\n\t\t\t\t\t\t\t\t\tcontrasena\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tguardarMensaje(data.crearUsuario);\r\n\t\t\tnavigation.navigate('Login');\r\n\r\n\r\n\t} catch (error) {\r\n\t\t\tguardarMensaje(error.message.replace('GraphQL error: ', ''));\r\n\t}\r\n}\r\n\t\r\n\r\n\t// muestra un mensaje toast\r\n\tconst mostrarAlerta = () => {\r\n\t\tToast.show({\r\n\t\t\ttext: mensaje,\r\n\t\t\tregisterButtonText: 'OK',\r\n\t\t\tduration: 4000\r\n\t\t})\r\n\t}\r\n\r\n\r\n\treturn(\r\n\t\t<TouchableWithoutFeedback onPress={() => Keyboard.dismiss()}>\r\n\t\t\t\t\t<View style={styles.container}>\r\n\t\t\t\t\t\t<View style={styles.bigCircle}></View>\r\n\t\t\t\t\t\t<View style={styles.smallCircle}></View>\r\n\t\t\t\t\t\t<View style={styles.centerizedView}>\r\n\t\t\t\t\t\t\t<View style={styles.authBox}>\r\n\t\t\t\t\t\t\t\t<View style={styles.logoBox}>\r\n\t\t\t\t\t\t\t\t\t<Icon\r\n\t\t\t\t\t\t\t\t\t\tcolor='#fff'\r\n\t\t\t\t\t\t\t\t\t\tname='comments'\r\n\t\t\t\t\t\t\t\t\t\ttype='font-awesome'\r\n\t\t\t\t\t\t\t\t\t\tsize={50}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t\t\t<Text style={styles.loginTitleText}>Ingrese sus datos</Text>\r\n\t\t\t\t\t\t\t\t<View style={styles.hr}></View>\r\n\t\t\t\t\t\t\t\t<View style={styles.inputBox}>\r\n\t\t\t\t\t\t\t\t\t<TextInput\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Nombre de usuario'\r\n\t\t\t\t\t\t\t\t\t\tonChangeText={ texto => guardarUsuario(texto) } //pasar valor al input\r\n\t\t\t\t\t\t\t\t\t\tstyle={styles.input} \r\n\t\t\t\t\t\t\t\t\t\tautoCapitalize='none'\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t\t\t<View style={styles.inputBox}>\r\n\t\t\t\t\t\t\t\t\t<TextInput\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Nombres completos'\r\n\t\t\t\t\t\t\t\t\t\tonChangeText={ texto => guardarNombre(texto) } //pasar valor al input\r\n\t\t\t\t\t\t\t\t\t\tstyle={styles.input} \r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t\t\t<View style={styles.inputBox}>\r\n\t\t\t\t\t\t\t\t\t<TextInput\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Email'\r\n\t\t\t\t\t\t\t\t\t\tonChangeText={ texto => guardarEmail(texto) } //pasar valor al input\r\n\t\t\t\t\t\t\t\t\t\tstyle={styles.input}\r\n\t\t\t\t\t\t\t\t\t\tautoCapitalize ='none'\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t\t\t<View style={styles.inputBox}>\r\n\t\t\t\t\t\t\t\t\t<TextInput\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='TelÃ©fono'\r\n\t\t\t\t\t\t\t\t\t\tonChangeText={ texto => guardarTelefono(texto) } //pasar valor al input\r\n\t\t\t\t\t\t\t\t\t\tstyle={styles.input} \r\n\t\t\t\t\t\t\t\t\t\tkeyboardType = 'numeric'\r\n\t\t\t\t\t\t\t\t\t\tmaxLength={10}\r\n\t\t\t\t\t\t\t\t\t\tautoCapitalize ='none' \r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t\t\t<View style={styles.inputBox}>\r\n\t\t\t\t\t\t\t\t\t<TextInput\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='ContraseÃ±a'\r\n\t\t\t\t\t\t\t\t\t\tonChangeText={ texto => guardarContrasena(texto) } //pasar valor al input\r\n\t\t\t\t\t\t\t\t\t\tstyle={styles.input} \r\n\t\t\t\t\t\t\t\t\t\tautoCapitalize ='none'\r\n\t\t\t\t\t\t\t\t\t\tsecureTextEntry={true}\r\n\t\t\t\t\t\t\t\t\t\ttextContentType='password'\r\n\t\t\t\t\t\t\t\t\t\tminLength={6}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<TouchableOpacity \r\n\t\t\t\t\t\t\t\tstyle={styles.registerButton}\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tonPress = { () => handleSubmit() }>\r\n\t\t\t\t\t\t\t\t\t<Text style={styles.registerButtonText}>Registrar</Text>\r\n\t\t\t\t\t\t\t\t</TouchableOpacity>\r\n\r\n\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t</View>\r\n\r\n\t\t\t\t\t\t{mensaje && mostrarAlerta()}\r\n\r\n\t\t\t\t\t</View>  \r\n\t\t</TouchableWithoutFeedback>\r\n\t);\r\n}\r\nexport default Register;\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tflex: 1,\r\n\t\tposition: 'relative',\r\n\t\tbackgroundColor: '#66C3FE',\r\n\t},\r\n\tbigCircle: {\r\n\t\twidth: Dimensions.get('window').height * 0.7,\r\n\t\theight: Dimensions.get('window').height * 0.7,\r\n\t\tbackgroundColor: '#49A5FC',\r\n\t\tborderRadius: 1000,\r\n\t\tposition: 'absolute',\r\n\t\tright: Dimensions.get('window').width * 0.25,\r\n\t\ttop: -50,\r\n\t},\r\n\tsmallCircle: {\r\n\t\twidth: Dimensions.get('window').height * 0.4,\r\n\t\theight: Dimensions.get('window').height * 0.4,\r\n\t\tbackgroundColor: '#55B1FC',\r\n\t\tborderRadius: 1000,\r\n\t\tposition: 'absolute',\r\n\t\tright: Dimensions.get('window').width * -0.2,\r\n\t\tbottom: Dimensions.get('window').width * -0.3,\r\n\t},\r\n\tcenterizedView: {\r\n\t\twidth: '100%',\r\n\t\ttop: '15%',\r\n\t},\r\n\tauthBox: {\r\n\t\twidth: '80%',\r\n\t\tbackgroundColor: '#fafafa',\r\n\t\tborderRadius: 20,\r\n\t\talignSelf: 'center',\r\n\t\tpaddingHorizontal: 14,\r\n\t\tpaddingBottom: 30,\r\n\t\tshadowColor: '#000',\r\n\t\tshadowOffset: {\r\n\t\t\twidth: 0,\r\n\t\t\theight: 2,\r\n\t\t},\r\n\t\tshadowOpacity: 0.25,\r\n\t\tshadowRadius: 3.84,\r\n\t\televation: 5,\r\n\t},\r\n\tlogoBox: {\r\n\t\twidth: 80,\r\n\t\theight: 80,\r\n\t\tbackgroundColor: '#eb4d4b',\r\n\t\tborderRadius: 1000,\r\n\t\talignSelf: 'center',\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\tjustifyContent: 'center',\r\n\t\ttop: -50,\r\n\t\tmarginBottom: -50,\r\n\t\tshadowColor: '#000',\r\n\t\tshadowOffset: { width: 0, height: 1 },\r\n\t\tshadowOpacity: 0.2,\r\n\t\tshadowRadius: 1.41,\r\n\t\televation: 2,\r\n\t},\r\n\tloginTitleText: {\r\n\t\tfontSize: 26,\r\n\t\tfontWeight: 'bold',\r\n\t\tmarginTop: 10,\r\n\t},\r\n\thr: {\r\n\t\twidth: '100%',\r\n\t\theight: 0.5,\r\n\t\tbackgroundColor: '#444',\r\n\t\tmarginTop: 6,\r\n\t},\r\n\tinputBox: {\r\n\t\tmarginTop: 10,\r\n\t},\r\n\tinputLabel: {\r\n\t\tfontSize: 18,\r\n\t\tmarginBottom: 6,\r\n\t},\r\n\tinput: {\r\n\t\twidth: '100%',\r\n\t\theight: 40,\r\n\t\tbackgroundColor: '#dfe4ea',\r\n\t\tborderRadius: 4,\r\n\t\tpaddingHorizontal: 10,\r\n\t},\r\n\tregisterButton: {\r\n\t\tbackgroundColor: '#003366',\r\n\t\tmarginTop: 10,\r\n\t\tpaddingVertical: 10,\r\n\t\tborderRadius: 4,\r\n\t},\r\n\tregisterButtonText: {\r\n\t\tcolor: '#fff',\r\n\t\ttextAlign: 'center',\r\n\t\tfontSize: 20,\r\n\t\tfontWeight: 'bold',\r\n\t},\r\n\tregisterText: {\r\n\t\ttextAlign: 'center',\r\n\t\tmarginTop: 20,\r\n\t\tfontSize: 16,\r\n\t},\r\n\tforgotPasswordText: {\r\n\t\ttextAlign: 'center',\r\n\t\tmarginTop: 12,\r\n\t\tfontSize: 16,\r\n\t},\r\n\tscrollContainer: {\r\n        flex: 1,\r\n\t\tpaddingTop: 40,\r\n        paddingBottom: 10,\r\n    },\r\n});"]},"metadata":{},"sourceType":"module"}