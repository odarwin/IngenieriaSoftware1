{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject,\n    _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Harold\\\\Downloads\\\\ProyectoIngS\\\\IngenieriaSoftware1\\\\screens\\\\Login.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { Toast } from 'native-base';\nimport { Icon } from 'react-native-elements';\nimport { useNavigation } from '@react-navigation/core';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { gql, useMutation } from '@apollo/client';\nvar AUTENTICAR_USUARIO = gql(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\" \\nmutation autenticarUsuario($input: AutenticarInput){\\n  autenticarUsuario(input: $input){\\n    token\\n  }\\n}\\n\\n\"])));\n\nvar Login = function Login() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      guardarEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      contrasena = _useState4[0],\n      guardarContrasena = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      mensaje = _useState6[0],\n      guardarMensaje = _useState6[1];\n\n  var navigation = useNavigation();\n\n  var _useMutation = useMutation(AUTENTICAR_USUARIO),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      autenticarUsuario = _useMutation2[0];\n\n  var handleSubmit = function handleSubmit() {\n    var _await$autenticarUsua, data, token;\n\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(email === \"\" || contrasena === \"\")) {\n              _context.next = 3;\n              break;\n            }\n\n            guardarMensaje('Todos los campos son obligatorios');\n            return _context.abrupt(\"return\");\n\n          case 3:\n            if (!(contrasena.length < 6)) {\n              _context.next = 6;\n              break;\n            }\n\n            guardarMensaje('La contraseÃ±a debe tener al menos 6 caracteres');\n            return _context.abrupt(\"return\");\n\n          case 6:\n            _context.prev = 6;\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(autenticarUsuario({\n              variables: {\n                input: {\n                  email: email,\n                  contrasena: contrasena\n                }\n              }\n            }));\n\n          case 9:\n            _await$autenticarUsua = _context.sent;\n            data = _await$autenticarUsua.data;\n            token = data.autenticarUsuario.token;\n            _context.next = 14;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('token', token));\n\n          case 14:\n            navigation.navigate('TipoVehiculo');\n            _context.next = 20;\n            break;\n\n          case 17:\n            _context.prev = 17;\n            _context.t0 = _context[\"catch\"](6);\n            guardarMensaje(_context.t0.message.replace('GraphQL error: ', ''));\n\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[6, 17]], Promise);\n  };\n\n  var mostrarAlerta = function mostrarAlerta() {\n    Toast.show({\n      text: mensaje,\n      registerButtonText: 'OK',\n      duration: 4000\n    });\n  };\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return Keyboard.dismiss();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 3\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 4\n    }\n  }, React.createElement(View, {\n    style: styles.bigCircle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }), React.createElement(View, {\n    style: styles.smallCircle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }), React.createElement(View, {\n    style: styles.centerizedView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.authBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 6\n    }\n  }, React.createElement(View, {\n    style: styles.logoBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, React.createElement(Icon, {\n    color: \"#fff\",\n    name: \"comments\",\n    type: \"font-awesome\",\n    size: 40,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 8\n    }\n  })), React.createElement(Text, {\n    style: styles.loginTitleText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, \"Inicio de Sesi\\xF3n\"), React.createElement(View, {\n    style: styles.hr,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.inputBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.inputLabel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 8\n    }\n  }, \"Correo electr\\xF3nico\"), React.createElement(TextInput, {\n    style: styles.input,\n    onChangeText: function onChangeText(texto) {\n      return guardarEmail(texto);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 8\n    }\n  })), React.createElement(View, {\n    style: styles.inputBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.inputLabel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 8\n    }\n  }, \"Contrase\\xF1a\"), React.createElement(TextInput, {\n    style: styles.input,\n    onChangeText: function onChangeText(texto) {\n      return guardarContrasena(texto);\n    },\n    secureTextEntry: true,\n    textContentType: \"password\",\n    minLength: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 8\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: styles.loginButton,\n    onPress: function onPress() {\n      return handleSubmit();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.loginButtonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 8\n    }\n  }, \"Iniciar Sesi\\xF3n\")), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    onPress: function onPress() {\n      return navigation.navigate('Register');\n    },\n    style: styles.registerText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 8\n    }\n  }, \"\\xBFNo tienes cuenta? Reg\\xEDstrate Ahora\")))), mensaje && mostrarAlerta()));\n};\n\nexport default Login;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    position: 'relative',\n    backgroundColor: '#66C3FE'\n  },\n  bigCircle: {\n    width: Dimensions.get('window').height * 0.5,\n    height: Dimensions.get('window').height * 0.5,\n    backgroundColor: '#49A5FC',\n    borderRadius: 1000,\n    position: 'absolute',\n    right: Dimensions.get('window').width * 0.25,\n    top: -50\n  },\n  smallCircle: {\n    width: Dimensions.get('window').height * 0.4,\n    height: Dimensions.get('window').height * 0.4,\n    backgroundColor: '#55B1FC',\n    borderRadius: 1000,\n    position: 'absolute',\n    right: Dimensions.get('window').width * -0.2,\n    bottom: Dimensions.get('window').width * -0.3\n  },\n  centerizedView: {\n    width: '100%',\n    top: '15%'\n  },\n  authBox: {\n    width: '80%',\n    backgroundColor: '#fafafa',\n    borderRadius: 20,\n    alignSelf: 'center',\n    paddingHorizontal: 14,\n    paddingBottom: 30,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  logoBox: {\n    width: 80,\n    height: 80,\n    backgroundColor: '#eb4d4b',\n    borderRadius: 1000,\n    alignSelf: 'center',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    top: -50,\n    marginBottom: -50,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 1.41,\n    elevation: 2\n  },\n  loginTitleText: {\n    fontSize: 26,\n    fontWeight: 'bold',\n    marginTop: 10,\n    color: '#003366',\n    textAlign: 'center'\n  },\n  hr: {\n    width: '100%',\n    height: 0.5,\n    backgroundColor: '#444',\n    marginTop: 6\n  },\n  inputBox: {\n    marginTop: 10\n  },\n  inputLabel: {\n    fontSize: 17,\n    marginBottom: 6\n  },\n  input: {\n    width: '100%',\n    height: 40,\n    backgroundColor: '#dfe4ea',\n    borderRadius: 4,\n    paddingHorizontal: 10\n  },\n  loginButton: {\n    backgroundColor: '#003366',\n    marginTop: 10,\n    paddingVertical: 10,\n    borderRadius: 4\n  },\n  loginButtonText: {\n    color: '#fff',\n    textAlign: 'center',\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  registerText: {\n    textAlign: 'center',\n    marginTop: 20,\n    fontSize: 14,\n    color: '#003366'\n  },\n  forgotPasswordText: {\n    textAlign: 'center',\n    marginTop: 12,\n    fontSize: 14,\n    color: '#003366'\n  }\n});","map":{"version":3,"sources":["C:/Users/Harold/Downloads/ProyectoIngS/IngenieriaSoftware1/screens/Login.js"],"names":["React","useState","Toast","Icon","useNavigation","AsyncStorage","gql","useMutation","AUTENTICAR_USUARIO","Login","email","guardarEmail","contrasena","guardarContrasena","mensaje","guardarMensaje","navigation","autenticarUsuario","handleSubmit","length","variables","input","data","token","setItem","navigate","message","replace","mostrarAlerta","show","text","registerButtonText","duration","Keyboard","dismiss","styles","container","bigCircle","smallCircle","centerizedView","authBox","logoBox","loginTitleText","hr","inputBox","inputLabel","texto","loginButton","loginButtonText","registerText","StyleSheet","create","flex","position","backgroundColor","width","Dimensions","get","height","borderRadius","right","top","bottom","alignSelf","paddingHorizontal","paddingBottom","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","display","alignItems","justifyContent","marginBottom","fontSize","fontWeight","marginTop","color","textAlign","paddingVertical","forgotPasswordText"],"mappings":"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","sourcesContent":["import React, {useState } from 'react'\r\nimport { \tStyleSheet, \r\n\t\t\t\t\tText, \r\n\t\t\t\t\tView, \r\n\t\t\t\t\tTextInput, \r\n\t\t\t\t\tDimensions, \r\n\t\t\t\t\tTouchableOpacity, \r\n\t\t\t\t\tTouchableWithoutFeedback, \r\n\t\t\t\t\tKeyboard \r\n\t\t\t\t} from 'react-native';\r\nimport { Toast } from 'native-base';\r\nimport { Icon } from 'react-native-elements';\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\n\r\n//Apollo \r\nimport { gql, useMutation } from '@apollo/client';\r\n\r\nconst AUTENTICAR_USUARIO = gql` \r\nmutation autenticarUsuario($input: AutenticarInput){\r\n  autenticarUsuario(input: $input){\r\n    token\r\n  }\r\n}\r\n\r\n`;\r\n\r\nconst Login = () => {\r\n\r\n\t//State del formulario\r\n\tconst [email, guardarEmail] = useState('');\r\n  const [contrasena, guardarContrasena] = useState('');\r\n\tconst [mensaje, guardarMensaje] = useState(null);\r\n\r\n\t//React navigation\r\n\tconst navigation = useNavigation();\r\n\r\n // Mutation de apollo\r\n const [ autenticarUsuario ] = useMutation(AUTENTICAR_USUARIO);\r\n\r\n\t//cuando el usuario presiona iniciar sesiÃ³n \r\n\tconst handleSubmit = async () => {\r\n\t\t//validar\r\n\t\tif( email === \"\" || contrasena === \"\" ){\r\n\t\t\t//Mostrar error\r\n\t\t\tguardarMensaje('Todos los campos son obligatorios')\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t//contraseÃ±a al menos 6 caracteres\r\n\t\tif(contrasena.length < 6){\r\n\t\t\tguardarMensaje('La contraseÃ±a debe tener al menos 6 caracteres');\r\n\t\t\treturn;\r\n\t\t} \r\n\t\r\n\t\ttry {\r\n\t\t\tconst { data } = await autenticarUsuario({\r\n\t\t\t\t\tvariables: {\r\n\t\t\t\t\t\t\tinput: {  \r\n\t\t\t\t\t\t\t\t\temail, \r\n\t\t\t\t\t\t\t\t\tcontrasena\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t}  \r\n\t\t\t});\r\n\t\t\r\n\t\t\tconst { token } = data.autenticarUsuario;\r\n\t\t\t\r\n\t\t\t//colocar token en storage \r\n\t\t\tawait AsyncStorage.setItem('token', token);\r\n\r\n\t\t\t//redireccionar a tipo de carro \r\n\t\t\tnavigation.navigate('TipoVehiculo');\r\n\r\n\r\n\t} catch (error) {\r\n\t\t\tguardarMensaje(error.message.replace('GraphQL error: ', ''));\r\n\t}\r\n\t\r\n\t}\r\n\r\n\t\t// muestra un mensaje toast\r\n\t\tconst mostrarAlerta = () => {\r\n\t\t\tToast.show({\r\n\t\t\t\ttext: mensaje,\r\n\t\t\t\tregisterButtonText: 'OK',\r\n\t\t\t\tduration: 4000\r\n\t\t\t})\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\treturn(\r\n\t\t<TouchableWithoutFeedback onPress={() => Keyboard.dismiss()}>\r\n\t\t\r\n\t\t\t<View style={styles.container}>\r\n\r\n\t\t\t\t<View style={styles.bigCircle}></View>\r\n\t\t\t\t<View style={styles.smallCircle}></View>\r\n\t\t\t\t<View style={styles.centerizedView}>\r\n\t\t\t\t\t<View style={styles.authBox}>\r\n\r\n\t\t\t\t\t\t<View style={styles.logoBox}>\r\n\t\t\t\t\t\t\t<Icon color='#fff' \r\n\t\t\t\t\t\t\tname='comments' \r\n\t\t\t\t\t\t\ttype='font-awesome' \r\n\t\t\t\t\t\t\tsize={40}/>\r\n\t\t\t\t\t\t</View>\r\n\r\n\t\t\t\t\t\t<Text style={styles.loginTitleText}>Inicio de SesiÃ³n</Text>\r\n\r\n\t\t\t\t\t\t<View style={styles.hr}></View>\r\n\r\n\t\t\t\t\t\t<View style={styles.inputBox}>\r\n\t\t\t\t\t\t\t<Text style={styles.inputLabel}>Correo electrÃ³nico</Text>\r\n\t\t\t\t\t\t\t<TextInput style={styles.input}\r\n\t\t\t\t\t\t\t\t\t\t\t\t onChangeText={ texto => guardarEmail(texto) }/>\r\n\t\t\t\t\t\t</View>\r\n\r\n\t\t\t\t\t\t<View style={styles.inputBox}>\r\n\t\t\t\t\t\t\t<Text style={styles.inputLabel}>ContraseÃ±a</Text>\r\n\t\t\t\t\t\t\t<TextInput\r\n\t\t\t\t\t\t\t\tstyle={styles.input}\r\n\t\t\t\t\t\t\t\tonChangeText={ texto => guardarContrasena(texto) }\r\n\t\t\t\t\t\t\t\tsecureTextEntry={true}\r\n\t\t\t\t\t\t\t\ttextContentType='password'\r\n\t\t\t\t\t\t\t\tminLength={6}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</View>\r\n\r\n\t\t\t\t\t\t<TouchableOpacity style={styles.loginButton}\r\n\t\t\t\t\t\tonPress = { () => handleSubmit() }>\r\n\t\t\t\t\t\t\t<Text style={styles.loginButtonText}>Iniciar SesiÃ³n</Text>\r\n\t\t\t\t\t\t</TouchableOpacity>\r\n\r\n\t\t\t\t\t\t<View>\r\n\t\t\t\t\t\t\t<Text\r\n\t\t\t\t\t\t\t\tonPress={()=> navigation.navigate('Register')}\r\n\t\t\t\t\t\t\t\tstyle={styles.registerText}>\r\n\t\t\t\t\t\t\t\tÂ¿No tienes cuenta? RegÃ­strate Ahora\r\n\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t</View>\r\n\r\n\t\t\t\t\t\t{/* <TouchableOpacity>\r\n\t\t\t\t\t\t\t<Text style={styles.forgotPasswordText}>Â¿Olvidaste tu contraseÃ±a?</Text>\r\n\t\t\t\t\t\t</TouchableOpacity> */}\r\n\r\n\t\t\t\t\t</View>\r\n\t\t\t\t</View>\r\n\r\n\t\t\t\t{mensaje && mostrarAlerta()}\r\n\r\n\t\t\t</View>\r\n\r\n\t\t</TouchableWithoutFeedback>\r\n\t);\r\n}\r\nexport default Login;\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tflex: 1,\r\n\t\tposition: 'relative',\r\n\t\tbackgroundColor: '#66C3FE',\r\n\t},\r\n\tbigCircle: {\r\n\t\twidth: Dimensions.get('window').height * 0.5,\r\n\t\theight: Dimensions.get('window').height * 0.5,\r\n\t\tbackgroundColor: '#49A5FC',\r\n\t\tborderRadius: 1000,\r\n\t\tposition: 'absolute',\r\n\t\tright: Dimensions.get('window').width * 0.25,\r\n\t\ttop: -50,\r\n\t},\r\n\tsmallCircle: {\r\n\t\twidth: Dimensions.get('window').height * 0.4,\r\n\t\theight: Dimensions.get('window').height * 0.4,\r\n\t\tbackgroundColor: '#55B1FC',\r\n\t\tborderRadius: 1000,\r\n\t\tposition: 'absolute',\r\n\t\tright: Dimensions.get('window').width * -0.2,\r\n\t\tbottom: Dimensions.get('window').width * -0.3,\r\n\t},\r\n\tcenterizedView: {\r\n\t\twidth: '100%',\r\n\t\ttop: '15%',\r\n\t},\r\n\tauthBox: {\r\n\t\twidth: '80%',\r\n\t\tbackgroundColor: '#fafafa',\r\n\t\tborderRadius: 20,\r\n\t\talignSelf: 'center',\r\n\t\tpaddingHorizontal: 14,\r\n\t\tpaddingBottom: 30,\r\n\t\tshadowColor: '#000',\r\n\t\tshadowOffset: { width: 0, height: 2 },\r\n\t\tshadowOpacity: 0.25,\r\n\t\tshadowRadius: 3.84,\r\n\t\televation: 5,\r\n\t},\r\n\tlogoBox: {\r\n\t\twidth: 80,\r\n\t\theight: 80,\r\n\t\tbackgroundColor: '#eb4d4b',\r\n\t\tborderRadius: 1000,\r\n\t\talignSelf: 'center',\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\tjustifyContent: 'center',\r\n\t\ttop: -50,\r\n\t\tmarginBottom: -50,\r\n\t\tshadowColor: '#000',\r\n\t\tshadowOffset: { width: 0, height: 1 },\r\n\t\tshadowOpacity: 0.2,\r\n\t\tshadowRadius: 1.41,\r\n\t\televation: 2,\r\n\t},\r\n\tloginTitleText: {\r\n\t\tfontSize: 26,\r\n\t\tfontWeight: 'bold',\r\n\t\tmarginTop: 10,\r\n\t\tcolor: '#003366',\r\n\t\ttextAlign: 'center'\r\n\t},\r\n\thr: {\r\n\t\twidth: '100%',\r\n\t\theight: 0.5,\r\n\t\tbackgroundColor: '#444',\r\n\t\tmarginTop: 6,\r\n\t},\r\n\tinputBox: {\r\n\t\tmarginTop: 10,\r\n\t},\r\n\tinputLabel: {\r\n\t\tfontSize: 17,\r\n\t\tmarginBottom: 6,\r\n\t},\r\n\tinput: {\r\n\t\twidth: '100%',\r\n\t\theight: 40,\r\n\t\tbackgroundColor: '#dfe4ea',\r\n\t\tborderRadius: 4,\r\n\t\tpaddingHorizontal: 10,\r\n\t},\r\n\tloginButton: {\r\n\t\tbackgroundColor: '#003366',\r\n\t\tmarginTop: 10,\r\n\t\tpaddingVertical: 10,\r\n\t\tborderRadius: 4,\r\n\t},\r\n\tloginButtonText: {\r\n\t\tcolor: '#fff',\r\n\t\ttextAlign: 'center',\r\n\t\tfontSize: 18,\r\n\t\tfontWeight: 'bold',\r\n\t},\r\n\tregisterText: {\r\n\t\ttextAlign: 'center',\r\n\t\tmarginTop: 20,\r\n\t\tfontSize: 14,\r\n\t\tcolor: '#003366',\r\n\t},\r\n\tforgotPasswordText: {\r\n\t\ttextAlign: 'center',\r\n\t\tmarginTop: 12,\r\n\t\tfontSize: 14,\r\n\t\tcolor: '#003366',\r\n\t},\r\n});"]},"metadata":{},"sourceType":"module"}