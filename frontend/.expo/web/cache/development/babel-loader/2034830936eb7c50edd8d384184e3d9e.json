{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { ViewPropTypes } from \"react-native-web/dist/index\";\nimport PropTypes from 'prop-types';\nvar androidProptypes = {\n  fadeToColor: PropTypes.string,\n  androidVariant: PropTypes.oneOf(['iosClone', 'nativeAndroid']),\n  dividerHeight: PropTypes.number,\n  is24hourSource: PropTypes.oneOf(['locale', 'device'])\n};\nvar DateType = PropTypes.instanceOf(Date);\nexport default _objectSpread(_objectSpread({}, Platform === 'android' ? androidProptypes : {}), {}, {\n  date: DateType.isRequired,\n  onChange: PropTypes.func,\n  minimumDate: DateType,\n  maximumDate: DateType,\n  mode: PropTypes.oneOf(['date', 'time', 'datetime']),\n  minuteInterval: PropTypes.oneOf([1, 2, 3, 4, 5, 6, 10, 12, 15, 20, 30]),\n  locale: PropTypes.string,\n  textColor: PropTypes.string,\n  timeZoneOffsetInMinutes: PropTypes.number,\n  testID: ViewPropTypes.testID,\n  style: ViewPropTypes.style\n});","map":{"version":3,"sources":["C:/Users/Harold/Downloads/ProyectoIngS/IngenieriaSoftware1/node_modules/react-native-date-picker/src/propTypes.js"],"names":["ViewPropTypes","PropTypes","androidProptypes","fadeToColor","string","androidVariant","oneOf","dividerHeight","number","is24hourSource","DateType","instanceOf","Date","Platform","date","isRequired","onChange","func","minimumDate","maximumDate","mode","minuteInterval","locale","textColor","timeZoneOffsetInMinutes","testID","style"],"mappings":";;;;;;;SAAmBA,a;AACnB,OAAOC,SAAP,MAAsB,YAAtB;AAEA,IAAMC,gBAAgB,GAAG;AACvBC,EAAAA,WAAW,EAAEF,SAAS,CAACG,MADA;AAEvBC,EAAAA,cAAc,EAAEJ,SAAS,CAACK,KAAV,CAAgB,CAAC,UAAD,EAAa,eAAb,CAAhB,CAFO;AAGvBC,EAAAA,aAAa,EAAEN,SAAS,CAACO,MAHF;AAIvBC,EAAAA,cAAc,EAAER,SAAS,CAACK,KAAV,CAAgB,CAAC,QAAD,EAAW,QAAX,CAAhB;AAJO,CAAzB;AAOA,IAAMI,QAAQ,GAAGT,SAAS,CAACU,UAAV,CAAqBC,IAArB,CAAjB;AAEA,+CACMC,QAAQ,KAAK,SAAb,GAAyBX,gBAAzB,GAA4C,EADlD;AAEEY,EAAAA,IAAI,EAAEJ,QAAQ,CAACK,UAFjB;AAGEC,EAAAA,QAAQ,EAAEf,SAAS,CAACgB,IAHtB;AAIEC,EAAAA,WAAW,EAAER,QAJf;AAKES,EAAAA,WAAW,EAAET,QALf;AAMEU,EAAAA,IAAI,EAAEnB,SAAS,CAACK,KAAV,CAAgB,CAAC,MAAD,EAAS,MAAT,EAAiB,UAAjB,CAAhB,CANR;AAOEe,EAAAA,cAAc,EAAEpB,SAAS,CAACK,KAAV,CAAgB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,EAAnB,EAAuB,EAAvB,EAA2B,EAA3B,EAA+B,EAA/B,EAAmC,EAAnC,CAAhB,CAPlB;AAQEgB,EAAAA,MAAM,EAAErB,SAAS,CAACG,MARpB;AASEmB,EAAAA,SAAS,EAAEtB,SAAS,CAACG,MATvB;AAUEoB,EAAAA,uBAAuB,EAAEvB,SAAS,CAACO,MAVrC;AAWEiB,EAAAA,MAAM,EAAEzB,aAAa,CAACyB,MAXxB;AAYEC,EAAAA,KAAK,EAAE1B,aAAa,CAAC0B;AAZvB","sourcesContent":["import { Platform, ViewPropTypes } from 'react-native'\nimport PropTypes from 'prop-types'\n\nconst androidProptypes = {\n  fadeToColor: PropTypes.string,\n  androidVariant: PropTypes.oneOf(['iosClone', 'nativeAndroid']),\n  dividerHeight: PropTypes.number,\n  is24hourSource: PropTypes.oneOf(['locale', 'device']),\n}\n\nconst DateType = PropTypes.instanceOf(Date)\n\nexport default {\n  ...(Platform === 'android' ? androidProptypes : {}),\n  date: DateType.isRequired,\n  onChange: PropTypes.func,\n  minimumDate: DateType,\n  maximumDate: DateType,\n  mode: PropTypes.oneOf(['date', 'time', 'datetime']),\n  minuteInterval: PropTypes.oneOf([1, 2, 3, 4, 5, 6, 10, 12, 15, 20, 30]),\n  locale: PropTypes.string,\n  textColor: PropTypes.string,\n  timeZoneOffsetInMinutes: PropTypes.number,\n  testID: ViewPropTypes.testID,\n  style: ViewPropTypes.style,\n}\n"]},"metadata":{},"sourceType":"module"}